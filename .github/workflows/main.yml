name: Update Filter Lists

on:
  schedule:
    - cron: "0 */6 * * *"
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_ENV: production

jobs:
  cgps:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: "mrrfv/cloudflare-gateway-pihole-scripts"
          ref: "v1"

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Install npm dependencies
        run: npm ci

      - name: Download allowlists
        id: download-allowlists
        run: |
          echo "::set-output name=allowlists::$(npm run download:allowlist --silent)"
        env:
          ALLOWLIST_URLS: ${{ vars.ALLOWLIST_URLS }}

      - name: Download blocklists
        id: download-blocklists
        run: |
          echo "::set-output name=blocklists::$(npm run download:blocklist --silent)"
        env:
          BLOCKLIST_URLS: ${{ vars.BLOCKLIST_URLS }}

      - name: Check for changes in allowlists
        id: check-allowlist-changes
        run: echo "${{ steps.download-allowlists.outputs.allowlists }}" | cmp -s - <(cat allowlists.txt 2>/dev/null || echo "")
        continue-on-error: true

      - name: Check for changes in blocklists
        id: check-blocklist-changes
        run: echo "${{ steps.download-blocklists.outputs.blocklists }}" | cmp -s - <(cat blocklists.txt 2>/dev/null || echo "")
        continue-on-error: true

      - name: Delete old rules and lists
        if: steps.check-allowlist-changes.outputs.exit-code == 1 || steps.check-blocklist-changes.outputs.exit-code == 1
        run: npm run cloudflare-delete
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_LIST_ITEM_LIMIT: ${{ secrets.CLOUDFLARE_LIST_ITEM_LIMIT }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          FAST_MODE: ${{ vars.FAST_MODE }}

      - name: Create new rules and lists
        run: npm run cloudflare-create
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_LIST_ITEM_LIMIT: ${{ secrets.CLOUDFLARE_LIST_ITEM_LIMIT }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          FAST_MODE: ${{ vars.FAST_MODE }}

      - name: Check and delete old list
        run: npm run check-and-delete-old-list
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_LIST_ITEM_LIMIT: ${{ secrets.CLOUDFLARE_LIST_ITEM_LIMIT }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          FAST_MODE: ${{ vars.FAST_MODE }}

      - name: Send ping request
        if: env.PING_URL != ''
        run: |
          curl "${{ env.PING_URL }}"
        env:
          PING_URL: ${{ secrets.PING_URL }}

      - name: Keep workflow alive
        uses: gautamkrishnar/keepalive-workflow@v1
